---
type Props = {
  reaction: "positive" | "negative";
};

const { reaction } = Astro.props;

const title =
  reaction === "positive"
    ? "What made this page great?"
    : "How can we improve?";

const placeholder =
  reaction === "positive"
    ? "Let us know what you found helpful"
    : "Let us know how we can do better";
---

<div class="space-y-4">
  <h3 class="text-lg font-semibold md:text-xl lg:text-2xl">{title}</h3>
  <textarea
    class="w-full resize-none rounded-lg border-1.5 border-soft-gray p-1.5 text-sm shadow-sm dark:border-gray dark:bg-dark md:p-3 md:text-base lg:p-2.5"
    rows="5"
    v-model="feedback"
    autofocus
    {placeholder}></textarea>
  <button
    v-if="feedback"
    class="rounded-lg bg-light-gray px-3 py-2 font-semibold text-dark hover:cursor-pointer hover:bg-gray hover:text-pale active:bg-rose dark:bg-gray dark:text-pale dark:hover:bg-dark-gray"
    :disabled="feedback.trim() === ''"
    @click="submitFeedback"
  >
    Send feedback
  </button>
</div>

<script>
  import Alpine from "alpinejs";
  import posthog from "posthog-js";

  document.addEventListener("alpine:init", () => {
    Alpine.store("feedback", {
      submit(reaction: string) {
        posthog.capture("page_feedback", { reaction });
      },
    });
  });
</script>
